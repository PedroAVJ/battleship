{"version":3,"file":"js/776.abe026f0.js","mappings":"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","sources":["webpack://battleship/./src/store/constants.ts","webpack://battleship/./src/views/MapSelect.vue?1021","webpack://battleship/./src/views/MapSelect.vue"],"sourcesContent":["import { ShipName, MapName } from '@/store/enums'\r\nimport { Tile } from '@/store/interfaces'\r\n\r\n\r\n/**\r\n * Represents the number of ships of each type that are available to place on the board.\r\n */\r\nexport const SHIP_COUNTS = {\r\n    [ShipName.AIRCRAFT_CARRIER]: 1,\r\n    [ShipName.FRIGATE]: 1,\r\n    [ShipName.BATTLESHIP]: 1,\r\n    [ShipName.DESTROYER]: 1,\r\n    [ShipName.SUPPLY_BOAT]: 1,\r\n    [ShipName.SUBMARINE]: 1,\r\n} as const;\r\n\r\nexport const SHIP_DIMENSIONS = {\r\n\r\n    [ShipName.SUBMARINE]: {\r\n        length: 1,\r\n        width: 1,\r\n    },\r\n    [ShipName.SUPPLY_BOAT]: {\r\n        length: 2,\r\n        width: 1,\r\n    },\r\n    [ShipName.DESTROYER]: {\r\n        length: 3,\r\n        width: 1,\r\n    },\r\n    [ShipName.BATTLESHIP]: {\r\n        length: 4,\r\n        width: 1,\r\n    },\r\n    [ShipName.FRIGATE]: {\r\n        length: 5,\r\n        width: 1,\r\n    },\r\n    [ShipName.AIRCRAFT_CARRIER]: {\r\n        length: 5,\r\n        width: 2,\r\n    },\r\n\r\n} as const;\r\n\r\n// Water Tile (_): see MAPS for context\r\nconst _: Tile = {\r\n    background: {\r\n        isWater: true,\r\n        isLand: false,\r\n        isOutOfBounds: false,\r\n    },\r\n    contains: {\r\n        missedShot: false,\r\n        successfulShot: false,\r\n        uncoveredShip: false,\r\n    },\r\n};\r\n\r\n// Land Tile (M): see MAPS for context\r\nconst M: Tile = {\r\n    background: {\r\n        isWater: false,\r\n        isLand: true,\r\n        isOutOfBounds: false,\r\n    },\r\n    contains: {\r\n        missedShot: false,\r\n        successfulShot: false,\r\n        uncoveredShip: false,\r\n    },\r\n};\r\n\r\n// Out of bounds Tile (X): see MAPS for context\r\nconst X: Tile = {\r\n    background: {\r\n        isWater: false,\r\n        isLand: false,\r\n        isOutOfBounds: true,\r\n    },\r\n    contains: {\r\n        missedShot: false,\r\n        successfulShot: false,\r\n        uncoveredShip: false,\r\n    },\r\n};\r\n\r\n/**\r\n * This is where maps are sketched and designed.\r\n * M represents land, _ represents water, and X represents out of bounds.\r\n *\r\n * This format achieves an optimal height-to-width ratio on the screen.\r\n * - Using '.' for water, '#' for land and 'X' for out of bounds in nested lists was too wide.\r\n * - Using strings like 'X..#..#..#.X' for each row was too tall.\r\n *\r\n * This map data is only used once in the application, so there is no risk of\r\n * just passing it directly as a board as it is not a big deal to have to convert\r\n * it to a board. It is more important to have a readable map.\r\n */\r\nexport const MAPS = {\r\n    [MapName.MAP1]: [\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n    ],\r\n    [MapName.MAP2]: [\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n    ],\r\n    [MapName.MAP3]: [\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n        [_, _, _, _, _, _, _, _, _, _],\r\n    ],\r\n} as const;","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-158c9145\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"map-selection-container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", { class: \"map-selection-title\" }, \" Select Map \", -1))\nconst _hoisted_3 = { class: \"map-buttons\" }\n\nimport { useStore } from '@/store';\r\nimport { useRouter } from 'vue-router';\r\nimport { MapName, Mutation, ShipName } from '@/store/enums';\r\nimport { MAPS, SHIP_COUNTS } from '@/store/constants';\r\nimport { Tile } from '@/store/interfaces';\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'MapSelect',\n  setup(__props) {\n\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\nfunction setMap(mapName: MapName) {\r\n  store.commit(Mutation.SET_GAME_MAP_NAME, mapName);\r\n\r\n  store.commit(Mutation.SET_GUI_SUBMARINE_COUNT, SHIP_COUNTS[ShipName.SUBMARINE]);\r\n  store.commit(Mutation.SET_GUI_SUPPLY_BOAT_COUNT, SHIP_COUNTS[ShipName.SUPPLY_BOAT]);\r\n  store.commit(Mutation.SET_GUI_DESTROYER_COUNT, SHIP_COUNTS[ShipName.DESTROYER]);\r\n  store.commit(Mutation.SET_GUI_BATTLESHIP_COUNT, SHIP_COUNTS[ShipName.BATTLESHIP]);\r\n  store.commit(Mutation.SET_GUI_FRIGATE_COUNT, SHIP_COUNTS[ShipName.FRIGATE]);\r\n  store.commit(Mutation.SET_GUI_AIRCRAFT_CARRIER_COUNT, SHIP_COUNTS[ShipName.AIRCRAFT_CARRIER]);\r\n\r\n  const map = MAPS[mapName];\r\n\r\n  // Deep copy the map, as MAPS uses the same object reference for each tile\r\n  const computerBoard = JSON.parse(JSON.stringify(map)) as Tile[][];\r\n  const playerBoard = JSON.parse(JSON.stringify(map)) as Tile[][];\r\n\r\n  store.commit(Mutation.SET_PLAYER_BOARD, playerBoard);\r\n  store.commit(Mutation.SET_COMPUTER_BOARD, computerBoard);\r\n\r\n  router.push({ name: 'PlaceShips' });\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"map-button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (setMap(_unref(MapName).MAP1)))\n      }, \" Small Map \"),\n      _createElementVNode(\"button\", {\n        class: \"map-button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (setMap(_unref(MapName).MAP2)))\n      }, \" Medium Map \"),\n      _createElementVNode(\"button\", {\n        class: \"map-button\",\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (setMap(_unref(MapName).MAP3)))\n      }, \" Large Map \")\n    ])\n  ]))\n}\n}\n\n})","import script from \"./MapSelect.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./MapSelect.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./MapSelect.vue?vue&type=style&index=0&id=158c9145&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\battleship\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-158c9145\"]])\n\nexport default __exports__"],"names":["SHIP_COUNTS","ShipName","SHIP_DIMENSIONS","length","width","_","background","isWater","isLand","isOutOfBounds","contains","missedShot","successfulShot","uncoveredShip","MAPS","MapName","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_defineComponent","__name","setup","__props","router","useRouter","store","useStore","setMap","mapName","commit","Mutation","map","computerBoard","JSON","parse","stringify","playerBoard","push","name","_ctx","_cache","_openBlock","_createElementBlock","onClick","$event","_unref","MAP1","MAP2","MAP3","__exports__"],"sourceRoot":""}