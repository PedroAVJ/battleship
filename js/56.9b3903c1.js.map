{"version":3,"file":"js/56.9b3903c1.js","mappings":"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","sources":["webpack://battleship/./src/utils/Game.ts","webpack://battleship/./src/components/PlayerBoard.vue?7bc6","webpack://battleship/./src/components/PlayerBoard.vue","webpack://battleship/./src/components/ShipItem.vue?8a58","webpack://battleship/./src/components/ShipItem.vue","webpack://battleship/./src/views/PlaceShips.vue?77f2","webpack://battleship/./src/views/PlaceShips.vue"],"sourcesContent":["import { User, Tile } from \"./Interfaces\";\r\nimport { ShipName, Orientation } from \"./Enums\";\r\nimport { SHIPS } from \"./Constants\";\r\n\r\n\r\n// Hacky way to wait inlined in a function\r\nexport function sleep(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function allShipsPlaced(user: User): boolean {\r\n    let flag = true;\r\n    Object.values(ShipName).forEach((shipName) => {\r\n        if (user[shipName].guiCount > 0) {\r\n            flag = false;\r\n        }\r\n    });\r\n    return flag;\r\n}\r\n\r\nexport function isGameOver(board: Tile[][]): boolean {\r\n\r\n    // Empty board is not game over\r\n    if (board.length === 0) return false;\r\n    if (board[0].length === 0) return false;\r\n\r\n    for (const row of board) {\r\n        for (const tile of row) {\r\n            if (tile.shipHitbox && !tile.contains.successfulShot) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function hasValidMove(board: Tile[][]): boolean {\r\n    for (const row of board) {\r\n        for (const tile of row) {\r\n            if (!isInvalidSquare(tile)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function makeRandomValidMove(board: Tile[][]): { row: number, col: number } {\r\n    if (isGameOver(board)) {\r\n        throw new Error('Game is over, cannot make a move.');\r\n    }\r\n    if (!hasValidMove(board)) {\r\n        throw new Error('No valid moves available.');\r\n    }\r\n    const row = Math.floor(Math.random() * board.length);\r\n    const col = Math.floor(Math.random() * board[0].length);\r\n\r\n    if (isInvalidSquare(board[row][col])) {\r\n        return makeRandomValidMove(board);\r\n    }\r\n    return { row, col };\r\n}\r\n\r\nexport function getShipHitboxes(shipName: ShipName, orientation: Orientation): { row: number, col: number }[] {\r\n    const shipHitboxes: { row: number, col: number }[] = [];\r\n    for (let i = 0; i < SHIPS[shipName].length; i++) {\r\n        for (let j = 0; j < SHIPS[shipName].width; j++) {\r\n\r\n            // If the ship is horizontal, i represents the column and j represents the row\r\n            // This is because the length moves horizontally and the width moves vertically\r\n            // X X X X X\r\n            // X X X X X\r\n            if (orientation === Orientation.HORIZONTAL) {\r\n                shipHitboxes.push({\r\n                    row: j,\r\n                    col: i,\r\n                });\r\n            }\r\n\r\n            // If the ship is vertical, i represents the row and j represents the column\r\n            // This is because the length moves vertically and the width moves horizontally\r\n            // X X\r\n            // X X\r\n            // X X\r\n            // X X\r\n            if (orientation === Orientation.VERTICAL) {\r\n                shipHitboxes.push({\r\n                    row: i,\r\n                    col: j,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return shipHitboxes;\r\n}\r\n\r\nexport function isInvalidShipPlacement(board: Tile[][], shipName: ShipName, shipOrientation: Orientation, row: number, col: number): boolean {\r\n    const shipHitboxes = getShipHitboxes(shipName, shipOrientation);\r\n    for (const hitbox of shipHitboxes) {\r\n        if (hitbox.row + row >= board.length) return true;\r\n        if (hitbox.col + col >= board[0].length) return true;\r\n        const tile = board[hitbox.row + row][hitbox.col + col];\r\n        if (isInvalidSquare(tile)) return true;\r\n        if (tile.shipHitbox) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function placeShip(board: Tile[][], shipName: ShipName, shipOrientation: Orientation, row: number, col: number): void {\r\n    if (isInvalidShipPlacement(board, shipName, shipOrientation, row, col)) {\r\n        throw new Error('Invalid ship placement.');\r\n    }\r\n    const shipHitboxes = getShipHitboxes(shipName, shipOrientation);\r\n    for (const hitbox of shipHitboxes) {\r\n        const tile = board[hitbox.row + row][hitbox.col + col];\r\n        tile.shipHitbox = shipName;\r\n        if (tile.shipSprite) {\r\n            tile.shipSprite.isPreview = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function randomlyPlaceShips(board: Tile[][]): void {\r\n    const shipNames = Object.values(ShipName);\r\n    shipNames.forEach((shipName) => {\r\n        for (let i = 0; i < SHIPS[shipName].count; i++) {\r\n            while (true) {\r\n                const row = Math.floor(Math.random() * board.length);\r\n                const col = Math.floor(Math.random() * board[0].length);\r\n                const orientation = Math.random() < 0.5 ? Orientation.HORIZONTAL : Orientation.VERTICAL;\r\n\r\n                if (isInvalidShipPlacement(board, shipName, orientation, row, col)) continue;\r\n\r\n                placeShip(board, shipName, orientation, row, col);\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport function uncoverShip(board: Tile[][], shipName: ShipName): void {\r\n    for (const row of board) {\r\n        for (const tile of row) {\r\n            if (tile.shipHitbox && tile.shipHitbox === shipName) {\r\n                tile.contains.uncoveredShip = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function submarineAttack(board: Tile[][], row_origin: number, col_origin: number): void {\r\n    for (let row = row_origin - 1; row <= row_origin + 1; row++) {\r\n        for (let col = col_origin - 1; col <= col_origin + 1; col++) {\r\n\r\n            // Out of bounds check\r\n            if (row < 0 || row >= board.length) continue;\r\n            if (col < 0 || col >= board[0].length) continue;\r\n\r\n            const tile = board[row][col];\r\n            if (isInvalidSquare(tile)) continue;\r\n\r\n            if (tile.shipHitbox) {\r\n                tile.contains.uncoveredShip = true;\r\n            }\r\n            else {\r\n                tile.contains.missedShot = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function battleshipAttack(board: Tile[][], row_origin: number, col_origin: number): void {\r\n    for (let row = row_origin - 1; row <= row_origin + 1; row++) {\r\n        for (let col = col_origin - 1; col <= col_origin + 1; col++) {\r\n            normalAttack(board, row, col);\r\n        }\r\n    }\r\n}\r\n\r\nexport function normalAttack(board: Tile[][], row: number, col: number): void {\r\n\r\n    // Out of bounds check\r\n    if (row < 0 || row >= board.length) return;\r\n    if (col < 0 || col >= board[0].length) return;\r\n\r\n    const tile = board[row][col];\r\n    if (isInvalidSquare(tile)) return;\r\n\r\n    if (tile.shipHitbox !== undefined) {\r\n        tile.contains.successfulShot = true;\r\n    }\r\n    else {\r\n        tile.contains.missedShot = true;\r\n    }\r\n}\r\n\r\nexport function isInvalidSquare(tile: Tile): boolean {\r\n    const isInvalidSquare =\r\n        tile.background.isLand\r\n        || tile.background.isOutOfBounds\r\n        || tile.contains.missedShot\r\n        || tile.contains.successfulShot;\r\n    return isInvalidSquare;\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-61b0d520\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"board-wrapper\" }\nconst _hoisted_2 = [\"onDragenter\", \"onDragleave\", \"onDrop\", \"onTouchstart\", \"onTouchend\"]\n\nimport Sprite from '@/components/Sprite.vue';\r\nimport { useStore } from '@/store';\r\nimport { Tile } from '@/utils/Interfaces';\r\nimport { isInvalidShipPlacement, placeShip } from '@/utils/Game';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PlayerBoard',\n  setup(__props) {\n\r\nconst store = useStore();\r\n\r\nlet touchedElement: any = null;\r\n\r\nfunction touchStart(e: TouchEvent, row: number, col: number) {\r\n  touchedElement = e.target;\r\n  dragEnter(e, row, col);\r\n}\r\n\r\nfunction touchEnd(e: TouchEvent, row: number, col: number) {\r\n  if (touchedElement === e.target) {\r\n    drop(e, row, col);\r\n    touchedElement = null;\r\n  }\r\n}\r\n\r\n\r\nfunction getBackground(tile: Tile) {\r\n  if (tile.background.isWater) return 'water';\r\n  if (tile.background.isLand) return 'land';\r\n  if (tile.background.isOutOfBounds) return 'out-of-bounds';\r\n}\r\n\r\nfunction dragEnter(e: MouseEvent | TouchEvent, row: number, col: number) {\r\n  if (!(e.target instanceof HTMLElement)) return;\r\n  \r\n  // Get the ship name and orientation from the global state\r\n  const shipName = store.currentlyDraggedShip?.name;\r\n  const shipOrientation = store.currentlyDraggedShip?.orientation;\r\n\r\n  if (!shipName || !shipOrientation) return;\r\n  const board = store.player.board;\r\n  if (isInvalidShipPlacement(board, shipName, shipOrientation, row, col)) return;\r\n  \r\n  // Set the ship preview and add the darken class\r\n  board[row][col].shipSprite = {\r\n    name: shipName,\r\n    orientation: shipOrientation,\r\n    isPreview: true,\r\n  }\r\n  e.target.classList.add('darken');\r\n\r\n}\r\n\r\nfunction dragLeave(e: MouseEvent | TouchEvent, row: number, col: number) {\r\n  if (!(e.target instanceof HTMLElement)) return;\r\n  \r\n  // Get the ship name and orientation from the global state\r\n  const shipName = store.currentlyDraggedShip?.name;\r\n  const shipOrientation = store.currentlyDraggedShip?.orientation;\r\n\r\n  if (!shipName || !shipOrientation) return;\r\n  const board = store.player.board;\r\n  if (isInvalidShipPlacement(board, shipName, shipOrientation, row, col)) return;\r\n  \r\n  // Remove the ship preview and the darken class\r\n  board[row][col].shipSprite = undefined;\r\n  e.target.classList.remove('darken');\r\n\r\n}\r\n\r\nfunction drop(e: MouseEvent | TouchEvent, row: number, col: number) {\r\n  if (!(e.target instanceof HTMLElement)) return;\r\n  \r\n  // Get the ship name and orientation from the global state\r\n  const shipName = store.currentlyDraggedShip?.name;\r\n  const shipOrientation = store.currentlyDraggedShip?.orientation;\r\n\r\n  if (!shipName || !shipOrientation) return;\r\n  const board = store.player.board;\r\n  if (isInvalidShipPlacement(board, shipName, shipOrientation, row, col)) return;\r\n\r\n  placeShip(board, shipName, shipOrientation, row, col);\r\n  store.setPlayerShipGUICount(shipName, store.player[shipName].guiCount - 1);\r\n\r\n  // Remove the darken class\r\n  e.target.classList.remove('darken');\r\n\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(store).player.board, (row, rowIndex) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: rowIndex,\n        class: \"board-row\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (col, colIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: colIndex,\n            class: \"board-cell\"\n          }, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass(getBackground(col)),\n              onDragenter: ($event: any) => (dragEnter($event, rowIndex, colIndex)),\n              onDragleave: ($event: any) => (dragLeave($event, rowIndex, colIndex)),\n              onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n              onDrop: ($event: any) => (drop($event, rowIndex, colIndex)),\n              onTouchstart: ($event: any) => (touchStart($event, rowIndex, colIndex)),\n              onTouchend: ($event: any) => (touchEnd($event, rowIndex, colIndex))\n            }, [\n              _createVNode(Sprite, { tile: col }, null, 8, [\"tile\"])\n            ], 42, _hoisted_2)\n          ]))\n        }), 128))\n      ]))\n    }), 128))\n  ]))\n}\n}\n\n})","import script from \"./PlayerBoard.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./PlayerBoard.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./PlayerBoard.vue?vue&type=style&index=0&id=61b0d520&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\battleship\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-61b0d520\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0974f5a8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"id\"]\nconst _hoisted_2 = { class: \"secondary-text\" }\nconst _hoisted_3 = { class: \"secondary-text\" }\nconst _hoisted_4 = { class: \"secondary-text\" }\n\nimport { ref, watch } from 'vue';\r\nimport { useStore } from '@/store';\r\nimport { ShipName, Orientation } from '@/utils/Enums';\r\nimport { SHIPS } from '@/utils/Constants';\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ShipItem',\n  props: {\n    shipName: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\r\n  shipName: ShipName,\r\n};\n\r\n\r\nconst store = useStore();\r\n\r\nconst orientation = ref<Orientation>(Orientation.HORIZONTAL);\r\nconst svgContainer = ref<HTMLElement | null>(null);\r\n\r\nwatch(() => store.currentlyDraggedShip?.name, (newVal) => {\r\n  if (newVal === props.shipName) {\r\n    svgContainer.value?.classList.add('selected');\r\n  } else {\r\n    svgContainer.value?.classList.remove('selected');\r\n  }\r\n});\r\n\r\nfunction dragStart(e: DragEvent) {\r\n  if (!(e.target instanceof HTMLElement)) return;\r\n  store.setCurrentlyDraggedShip(props.shipName, orientation.value);\r\n}\r\n\r\nfunction touchStart(e: TouchEvent) {\r\n  if (!(e.target instanceof HTMLElement)) return;\r\n  store.setCurrentlyDraggedShip(props.shipName, orientation.value);\r\n}\r\n\r\nfunction touchEnd(e: TouchEvent) {\r\n  if (!(e.target instanceof HTMLElement)) return;\r\n\r\n  // Reset the ship's position style\r\n  e.target.style.position = '';\r\n  e.target.style.left = '';\r\n  e.target.style.top = '';\r\n  e.target.style.zIndex = '';\r\n}\r\n\r\n\r\nfunction toggleOrientation() {\r\n  if (orientation.value === Orientation.HORIZONTAL) {\r\n    orientation.value = Orientation.VERTICAL;\r\n  } else {\r\n    orientation.value = Orientation.HORIZONTAL;\r\n  }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_unref(store).player[__props.shipName].guiCount > 0)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        id: __props.shipName,\n        class: \"secondary-background\"\n      }, [\n        _createElementVNode(\"h2\", _hoisted_2, _toDisplayString(__props.shipName), 1),\n        _createElementVNode(\"div\", {\n          ref_key: \"svgContainer\",\n          ref: svgContainer,\n          class: \"svg-container\",\n          draggable: \"true\",\n          onDragstart: dragStart,\n          onTouchstart: touchStart,\n          onTouchend: touchEnd\n        }, [\n          _renderSlot(_ctx.$slots, \"default\")\n        ], 544),\n        _createElementVNode(\"span\", _hoisted_3, \" Size: \" + _toDisplayString(_unref(SHIPS)[props.shipName].length) + \" x \" + _toDisplayString(_unref(SHIPS)[props.shipName].width), 1),\n        _createElementVNode(\"button\", {\n          class: _normalizeClass(['primary-button', orientation.value]),\n          onClick: toggleOrientation\n        }, _toDisplayString(orientation.value), 3),\n        _createElementVNode(\"span\", _hoisted_4, \" Count: x\" + _toDisplayString(_unref(store).player[__props.shipName].guiCount), 1)\n      ], 8, _hoisted_1))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","import script from \"./ShipItem.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ShipItem.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ShipItem.vue?vue&type=style&index=0&id=0974f5a8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\battleship\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0974f5a8\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d02554ce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"view-wrapper\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"primary-text\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"primary-text\"\n}\nconst _hoisted_4 = {\n  key: 3,\n  class: \"gui\"\n}\nconst _hoisted_5 = {\n  key: 0,\n  class: \"primary-text mt-5\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"primary-text mt-5\"\n}\nconst _hoisted_7 = { class: \"ship-container\" }\n\nimport ShipItem from '@/components/ShipItem.vue'\r\nimport { useStore } from '@/store';\r\nimport { useRouter } from 'vue-router';\r\nimport PlayerBoard from '@/components/PlayerBoard.vue';\r\nimport { allShipsPlaced, randomlyPlaceShips } from '@/utils/Game';\r\nimport { ShipName } from '@/utils/Enums';\r\nimport { Tile } from '@/utils/Interfaces';\r\nimport { computed } from 'vue';\r\n\r\n// SVG's\r\nimport Submarine from '@/components/SVGs/Ships/Submarine.vue'\r\nimport SupplyBoat from '@/components/SVGs/Ships/SupplyBoat.vue'\r\nimport Destroyer from '@/components/SVGs/Ships/Destroyer.vue'\r\nimport Battleship from '@/components/SVGs/Ships/Battleship.vue'\r\nimport Frigate from '@/components/SVGs/Ships/Frigate.vue'\r\nimport AircraftCarrier from '@/components/SVGs/Ships/AircraftCarrier.vue'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PlaceShips',\n  setup(__props) {\n\r\nconst store = useStore()\r\nconst router = useRouter()\r\n\r\n// This determines if the user is on a mobile device\r\nconst isMobile = computed(() => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))\r\n\r\nfunction startGame() {\r\n\r\n  // Save the current board state, as it will be reset when the game starts\r\n  const player_board_tiles = JSON.parse(JSON.stringify(store.player.board)) as Tile[][]\r\n  const computer_board_tiles = JSON.parse(JSON.stringify(store.computer.board)) as Tile[][]\r\n\r\n  store.$reset()\r\n\r\n  // Restore the board state\r\n  store.setPlayerBoard(player_board_tiles)\r\n  store.setComputerBoard(computer_board_tiles)\r\n\r\n  randomlyPlaceShips(store.computer.board)\r\n  store.setPlayerHasCurrentTurn(true)\r\n  router.push({ name: 'Game' })\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_unref(allShipsPlaced)(_unref(store).player))\n      ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, \" Start Game \"))\n      : (_openBlock(), _createElementBlock(\"h1\", _hoisted_3, \" Place Your Ships \")),\n    _createVNode(PlayerBoard),\n    (_unref(allShipsPlaced)(_unref(store).player))\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 2,\n          onClick: startGame,\n          class: \"primary-button mt-5\"\n        }, \" Start Game \"))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          (_unref(isMobile))\n            ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_5, \" Tap on a ship and tap the board to place it \"))\n            : (_openBlock(), _createElementBlock(\"h2\", _hoisted_6, \" Drag a ship and drop it on the board to place it \")),\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createVNode(ShipItem, {\n              \"ship-name\": _unref(ShipName).AIRCRAFT_CARRIER\n            }, {\n              default: _withCtx(() => [\n                _createVNode(AircraftCarrier)\n              ]),\n              _: 1\n            }, 8, [\"ship-name\"]),\n            _createVNode(ShipItem, {\n              \"ship-name\": _unref(ShipName).SUBMARINE\n            }, {\n              default: _withCtx(() => [\n                _createVNode(Submarine)\n              ]),\n              _: 1\n            }, 8, [\"ship-name\"]),\n            _createVNode(ShipItem, {\n              \"ship-name\": _unref(ShipName).DESTROYER\n            }, {\n              default: _withCtx(() => [\n                _createVNode(Destroyer)\n              ]),\n              _: 1\n            }, 8, [\"ship-name\"]),\n            _createVNode(ShipItem, {\n              \"ship-name\": _unref(ShipName).BATTLESHIP\n            }, {\n              default: _withCtx(() => [\n                _createVNode(Battleship)\n              ]),\n              _: 1\n            }, 8, [\"ship-name\"]),\n            _createVNode(ShipItem, {\n              \"ship-name\": _unref(ShipName).FRIGATE\n            }, {\n              default: _withCtx(() => [\n                _createVNode(Frigate)\n              ]),\n              _: 1\n            }, 8, [\"ship-name\"]),\n            _createVNode(ShipItem, {\n              \"ship-name\": _unref(ShipName).SUPPLY_BOAT\n            }, {\n              default: _withCtx(() => [\n                _createVNode(SupplyBoat)\n              ]),\n              _: 1\n            }, 8, [\"ship-name\"])\n          ])\n        ]))\n  ]))\n}\n}\n\n})","import script from \"./PlaceShips.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./PlaceShips.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./PlaceShips.vue?vue&type=style&index=0&id=d02554ce&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\battleship\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d02554ce\"]])\n\nexport default __exports__"],"names":["sleep","ms","Promise","resolve","setTimeout","allShipsPlaced","user","flag","Object","values","ShipName","forEach","shipName","guiCount","isGameOver","board","length","row","tile","shipHitbox","contains","successfulShot","hasValidMove","isInvalidSquare","makeRandomValidMove","Error","Math","floor","random","col","getShipHitboxes","orientation","shipHitboxes","i","SHIPS","j","width","Orientation","push","isInvalidShipPlacement","shipOrientation","hitbox","placeShip","shipSprite","isPreview","randomlyPlaceShips","shipNames","count","uncoverShip","uncoveredShip","submarineAttack","row_origin","col_origin","missedShot","battleshipAttack","normalAttack","undefined","background","isLand","isOutOfBounds","_hoisted_1","class","_hoisted_2","_defineComponent","__name","setup","__props","store","useStore","touchedElement","touchStart","e","target","dragEnter","touchEnd","drop","getBackground","isWater","HTMLElement","currentlyDraggedShip","name","player","classList","add","dragLeave","remove","setPlayerShipGUICount","_ctx","_cache","_openBlock","_createElementBlock","_Fragment","_renderList","_unref","rowIndex","key","colIndex","_createElementVNode","_normalizeClass","onDragenter","$event","onDragleave","onDragover","_withModifiers","onDrop","onTouchstart","onTouchend","_createVNode","Sprite","__exports__","_hoisted_3","_hoisted_4","props","ref","svgContainer","dragStart","setCurrentlyDraggedShip","value","style","position","left","top","zIndex","toggleOrientation","watch","newVal","id","_toDisplayString","ref_key","draggable","onDragstart","_renderSlot","$slots","onClick","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","router","useRouter","isMobile","computed","test","navigator","userAgent","startGame","player_board_tiles","JSON","parse","stringify","computer_board_tiles","computer","$reset","setPlayerBoard","setComputerBoard","setPlayerHasCurrentTurn","PlayerBoard","ShipItem","AIRCRAFT_CARRIER","default","_withCtx","AircraftCarrier","_","SUBMARINE","Submarine","DESTROYER","Destroyer","BATTLESHIP","Battleship","FRIGATE","Frigate","SUPPLY_BOAT","SupplyBoat"],"sourceRoot":""}